{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","setFilterBy","setQuery","query","onChange","e","target","value","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","normalizeText","text","toLowerCase","trim","TodoModal","useState","user","setUser","loadingUser","setLoadingUser","useEffect","userId","finally","href","email","name","App","setTodos","filterBy","loading","setLoading","catch","visibleTodos","useMemo","listTodos","filterTodos","filter","includes","getTodosFilter","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e9aaf68.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null,\n  setSelectedTodo: (t: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" key={todo.id} className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={cn('far', {\n                  'fa-eye': todo !== selectedTodo,\n                  'fa-eye-slash': todo === selectedTodo,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { Status } from '../../types/Status';\n\ntype Props = {\n  setFilterBy: (f: Status) => void;\n  setQuery: (q: string) => void;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterBy,\n  setQuery,\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(e) => setFilterBy(e.target.value as Status)}\n        >\n          <option value={Status.All}>All</option>\n          <option value={Status.Active}>Active</option>\n          <option value={Status.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Status } from './types/Status';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n\nexport const normalizeText = (text: string) => {\n  return text.toLowerCase().trim();\n};\n\nexport const getTodosFilter = (\n  listTodos: Todo[],\n  filterBy: Status,\n  query: string,\n) => {\n  let filterTodos = [...listTodos];\n\n  if (query) {\n    filterTodos = filterTodos.filter(\n      todo => normalizeText(todo.title).includes(normalizeText(query)),\n    );\n  }\n\n  switch (filterBy) {\n    case Status.Active:\n      return filterTodos.filter(todo => !todo.completed);\n    case Status.Completed:\n      return filterTodos.filter(todo => todo.completed);\n    case Status.All:\n    default:\n      return filterTodos;\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (t: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loadingUser, setLoadingUser] = useState(false);\n\n  useEffect(() => {\n    setLoadingUser(true);\n    getUser(selectedTodo.userId)\n      .then(setUser)\n      .finally(() => setLoadingUser(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loadingUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\nimport { getTodos, getTodosFilter } from './api';\nimport { Loader } from './components/Loader';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | []>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null >(null);\n  const [filterBy, setFilterBy] = useState<Status>(Status.All);\n  const [query, setQuery] = useState('');\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .catch(() => setTodos([]))\n      .finally(() => setLoading(false));\n  }, []);\n\n  const visibleTodos = useMemo(\n    () => getTodosFilter(todos, filterBy, query), [todos, filterBy, query],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterBy={setFilterBy}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  selectedTodo={selectedTodo}\n                  todos={visibleTodos}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      { selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}